#!/bin/bash
#linode GPU cluster script NVIDIA (Fedora 34)
echo "fedora 34 linode GPU cluster script"
echo "please not that the NVIDIA.run driver changes with this script from time to time due to this script getting the latest version of the linux kernel which requires sometimes a slightly newer version of NVIDIA.run driver to match the changes in the way the linux kernel subsystem accesses low-level memory functions for the driver"
echo "script part 1, script has to reboot after install cuda and nvidia deps"
echo "networking might require https://raw.githubusercontent.com/c4pt000/kernel-5.11.6-expSEHDsec-HAXM-cgroup-virtio-nvidia-amd/master/patch-libvirt-IPTABLES-NFTABLES-UFW.sh"
echo "the script will pause for 5 seconds" 
sleep 5s
sudo dnf -y install dnf-plugins-core
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io -y
systemctl start docker
systemctl enable docker

wget -O /etc/yum.repos.d/inttf.repo https://rpms.if-not-true-then-false.com/inttf.repo
yum update -y
yum install nvidia-docker2 -y

echo ' 
[nvidia-container-cli]
no-cgroups = true

[nvidia-container-runtime]
debug = "/var/log/nvidia-container-runtime.log"

' >  /etc/nvidia-container-runtime/config.toml 

systemctl restart docker



wget https://developer.download.nvidia.com/compute/cuda/repos/fedora33/x86_64/cuda-fedora33.repo
mv cuda-fedora33.repo /etc/yum.repos.d/
yum install cuda nvidia-driver gdm -y
#enable X11 to run in background so cgminer or other scripts dont kernel panic on quit
systemctl enable gdm
systemctl start gdm

echo "
export CUDA_HOME=/usr/local/cuda
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64
export PATH=$PATH:$CUDA_HOME/bin
" >> /root/.bashrc

source /root/.bashrc



rm -rf /root/.bashrc
wget https://raw.githubusercontent.com/c4pt000/kernel-5.11.6-expSEHDsec-HAXM-cgroup-virtio-nvidia-amd/master/linode-bashrc && cp -rf linode-bashrc /root/.bashrc && source /root/.bashrc
wget https://raw.githubusercontent.com/c4pt000/kernel-5.11.6-expSEHDsec-HAXM-cgroup-virtio-nvidia-amd/master/grub-linode-fedora34 && cp -rf grub-linode-fedora34 /etc/default/grub


echo "add 4 nvidia devices from current system, review xorg.conf in /etc/X11/xorg.conf and check Xorg.0.log in /var/log/Xorg.0.log adjust BusID with lspci -vvv | grep NVIDIA accordingly"

echo '
nvidia-xconfig: X configuration file generated by nvidia-xconfig
# nvidia-xconfig:  version 470.57.02

Section "ServerLayout"
    Identifier     "Layout0"
    Screen	0  "Screen0"
    InputDevice    "Keyboard0" "CoreKeyboard"
    InputDevice    "Mouse0" "CorePointer"
EndSection

Section "Files"
EndSection

Section "InputDevice"
    # generated from default
    Identifier     "Mouse0"
    Driver         "mouse"
    Option         "Protocol" "auto"
    Option         "Device" "/dev/input/mice"
    Option         "Emulate3Buttons" "no"
    Option         "ZAxisMapping" "4 5"
EndSection

Section "InputDevice"
    # generated from default
    Identifier     "Keyboard0"
    Driver         "kbd"
EndSection

Section "Monitor"
    Identifier     "Monitor0"
    VendorName     "Unknown"
    ModelName	   "Unknown"
    Option         "DPMS"
EndSection

Section "Device"
    Identifier     "Device0"
    Driver         "nvidia"
    VendorName     "NVIDIA Corporation"
        BusID "0:2:0"
        BusID "0:3:0"
        BusID "0:4:0"    
        BusID "0:5:0"
EndSection

Section "Screen"
    Identifier     "Screen0"
    Device         "Device0"
    Monitor        "Monitor0"
    DefaultDepth    24
    SubSection     "Display"
        Depth       24
    EndSubSection
EndSection
' > /etc/X11/xorg.conf


yum install kernel-devel kernel kernel-headers kernel-core kernel-modules -y
   




yum install mesa* vulkan* libglv* -y



grub2-mkconfig -o /boot/grub2/grub.cfg && grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg 

systemctl enable docker
systemctl start docker
nvidia-smi



echo "replace -O with your wallet receving address for p2pool mining or username password for other remote mining RSYOURRECEVINGADDRESSVLEQj4T:x "
echo ""
echo ""
echo "LINODE remote not local"
echo ""
echo ""
echo "docker run -it --net host --privileged --gpus all c4pt/cpuminer-opt cpuminer -a scrypt --url stratum+tcp://radiopool.me:9555 --userpass RSYOURRECEVINGADDRESSVLEQj4T:x -t 24 --param-n --param-r --no-longpoll --coinbase-addr=RSYOURRECEVINGADDRESSVLEQj4T --no-extranonce --no-getwork --no-gbt --no-stratum -q"
echo ""
echo ""
echo " docker run -it --net host --privileged --gpus all c4pt/nvidia-ubuntu-cgminer cgminer --scrypt -I 20 -o stratum+tcp://radiopool.me:9555 --userpass RSYOURRECEVINGADDRESSVLEQj4T:x --worksize 256 -g 1 --lookup-gap 2 --thread-concurrency 7200 --fix-protocol"
echo ""
echo ""
echo "system should reboot for changes to kernel and kernel-devel...... script will pause for 10 seconds"
sleep 10s
echo "setenforce 0 might help problematic issues with loading docker with a gpu"

wget https://us.download.nvidia.com/XFree86/Linux-x86_64/470.74/NVIDIA-Linux-x86_64-470.74.run
chmod +x NVIDIA-Linux-x86_64-470.74.run

   echo "after rebooting run this script to install NVIDIA drivers for nvidia-smi functionality ./NVIDIA-Linux-x86_64-465.31.run" 
echo '
for CGMINER 3.7.2

wget https://github.com/c4pt000/cgminer/releases/download/rpm%2Bdeb/cgminer-3.7.2_scrypt-2.x86_64.rpm
'
wget https://github.com/c4pt000/cgminer/releases/download/rpm%2Bdeb/cgminer-3.7.2_scrypt-2.x86_64.rpm
rpm -Uvh --force --nodeps cgminer*rpm

echo "you should reboot now"
echo "newer kernel takes 90 seconds to boot to load kobjects and events"
echo "dont forget to run on reboot"
echo "./NVIDIA-Linux-x86_64-470.74.run"

